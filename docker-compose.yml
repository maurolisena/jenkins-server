version: '3.9'

services:
  jenkins:
    container_name: jenkins-server
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - backend
    ports:
      - "8082:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - ./src/main/resources/jenkins-server.yaml:/var/jenkins_home/casc_configs/jenkins-server.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jenkins-token.txt:/run/secrets/jenkins-token.txt
      - ./github-token.txt:/run/secrets/github-token.txt
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
      CASC_JENKINS_CONFIG: /var/jenkins_home/casc_configs/jenkins-server.yaml
      GITHUB_USERNAME: maurolisena
      GITHUB_TOKEN_FILE: /run/secrets/github-token.txt
      SONARQUBE_TOKEN_FILE: /run/secrets/jenkins-token.txt
    user: root

  sonarqube:
    image: sonarqube:9.9-community
    container_name: sonarqube-server
    depends_on:
      - db
    ports:
      - "8889:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: mlisena
      SONAR_JDBC_PASSWORD: A8424628
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - ./init-sonar.sh:/opt/init-sonar.sh
      - ./jenkins-token.txt:/opt/sonarqube/jenkins-token.txt
    entrypoint: [ "/bin/bash", "-c", "/opt/init-sonar.sh" ]
    networks:
      - backend

  db:
    image: postgres:13
    container_name: sonar-db
    environment:
      POSTGRES_USER: mlisena
      POSTGRES_PASSWORD: A8424628
      POSTGRES_DB: sonar
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

volumes:
  jenkins_home:
  sonarqube_data:
  sonarqube_logs:
  postgres_data:

networks:
  backend:
    external: true